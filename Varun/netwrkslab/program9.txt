program-9

client

#include<string.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <netdb.h>
#include <stdio.h>
#include<stdlib.h>
void error(char *);
int main(int argc, char *argv[])
{
int sock, length, n;
struct sockaddr_in server, client;
struct hostent *hp;
char buffer[256];
if (argc != 3) { printf("Usage: server port\n");
exit(1);
}
sock= socket(AF_INET, SOCK_DGRAM, 0);
if (sock < 0)
error("socket");
server.sin_family = AF_INET;
hp = gethostbyname(argv[1]);
if (hp==0)
error("Unknown host");
bcopy((char *)hp->h_addr,(char *)&server.sin_addr,hp->h_length);
server.sin_port = htons(atoi(argv[2]));
length=sizeof(struct sockaddr_in);
while(1)
{
printf("Please enter the message: ");
bzero(buffer,256);
fgets(buffer,255,stdin);
n=sendto(sock,buffer,strlen(buffer),0,(struct sockaddr*)&server,length);
if(n < 0)
error("Sendto");
n=recvfrom(sock,buffer,256,0,(struct sockaddr*)&client,&length);
if (n < 0)
error("recvfrom");
printf("\nReceived Message From Server : %s",buffer);
//write(1,"Got an ack: ",12);
//write(1,buffer,n);
}
close(sock);
}
void error(char *msg)
{
perror(msg);
exit(0);
}



server

#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <netdb.h>
#include <stdio.h>
#include<stdlib.h>
#include<string.h>
void error(char *msg)
{
perror(msg);
exit(0);
}
int main(int argc, char *argv[])
{
int sock, length, clientlen, n;
struct sockaddr_in server;
struct sockaddr_in client;
char buf[1024];
if (argc < 2) {
fprintf(stderr, "ERROR, no port provided\n");
exit(0);
}
sock=socket(AF_INET, SOCK_DGRAM, 0);
if (sock < 0)
error("Opening socket");
length = sizeof(server);
bzero(&server,length);
server.sin_family=AF_INET;
server.sin_addr.s_addr=INADDR_ANY;
server.sin_port=htons(atoi(argv[1]));
if (bind(sock,(struct sockaddr *)&server,length)<0)
error("binding");
clientlen = sizeof(struct sockaddr_in);
while (1) {
n = recvfrom(sock,buf,1024,0,(struct sockaddr *)&client,&clientlen);
if (n < 0)
error("recvfrom");
printf("\nReceived Message From Client : %s",buf);
//write(1,"Received a datagram: ",21);
//write(1,buf,n); //writes output to the screen
printf("Please enter the message: ");
bzero(buf,256);
fgets(buf,255,stdin);
n=sendto(sock,buf,strlen(buf),0,(struct sockaddr*)&client,clientlen);
if (n < 0)
error("Sendto");
}
///closes the file descriptor
close(sock);
}
