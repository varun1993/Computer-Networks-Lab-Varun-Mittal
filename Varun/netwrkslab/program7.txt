exp7

client
****************************
#include<stdio.h>
#include<sys/types.h>
#include<sys/socket.h>
#include<netinet/in.h>
#include<stdlib.h>
#include<netdb.h>
int main(int args,char *argv[])
{
int sockfd,connfd;
int servlen;
struct sockaddr_in cli,ser;
struct hostent *he;
he=gethostbyname(argv[1]);
servlen=sizeof(ser);
sockfd=socket(AF_INET,SOCK_STREAM,0);
if(sockfd<0)
{
perror("socket");
exit(1);
}
ser.sin_addr=*((struct in_addr *)he->h_addr);
ser.sin_port=htons(atoi(argv[2]));
ser.sin_family=AF_INET;
if((connect(sockfd,(struct sockaddr *)&ser,servlen)<0))
{
perror("connect");
exit(1);
}
write(sockfd,"hello",100);
}

server
**********************************

#include<stdio.h>
#include<sys/types.h>
#include<sys/socket.h>
#include<netinet/in.h>
#include<stdlib.h>
int main(int argc,char *argv[])
{
int sockfd,connfd;
int clilen;
char buf[100];
struct sockaddr_in cli,ser;
sockfd=socket(AF_INET,SOCK_STREAM,0);
if(sockfd<0)
{
perror("sockfd");
exit(1);
}
if(listen(sockfd,5)<0)
{
perror("listen");
exit(1);
}
clilen=sizeof(cli);
connfd=accept(sockfd,(struct sockaddr * )&cli,&clilen);
if(connfd<0)
{
perror("accept");
exit(1);
}
read(connfd,buf,sizeof(buf));
printf("%s",buf);
return 0;
}